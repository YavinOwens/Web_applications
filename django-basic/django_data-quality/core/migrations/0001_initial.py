# Generated by Django 4.2.17 on 2024-12-24 21:44

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to='datasets/')),
                ('file_type', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('profile_status', models.CharField(choices=[('not_generated', 'Not Generated'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='not_generated', max_length=20)),
                ('profile_last_updated', models.DateTimeField(blank=True, null=True)),
                ('profile_config', models.JSONField(blank=True, null=True)),
                ('profile_report', models.FileField(blank=True, null=True, upload_to='profiles/reports/')),
                ('profile_json', models.FileField(blank=True, null=True, upload_to='profiles/json/')),
                ('total_rows', models.IntegerField(blank=True, null=True)),
                ('total_columns', models.IntegerField(blank=True, null=True)),
                ('column_names', models.JSONField(blank=True, null=True)),
                ('column_types', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataQualityAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('numeric_stats', models.JSONField(blank=True, null=True)),
                ('correlation_matrix', models.JSONField(blank=True, null=True)),
                ('missing_value_stats', models.JSONField(blank=True, null=True)),
                ('outlier_stats', models.JSONField(blank=True, null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.dataset')),
            ],
            options={
                'verbose_name_plural': 'Data quality analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataGovernanceRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('rule_type', models.CharField(choices=[('format', 'Format'), ('regex', 'Regular Expression'), ('range', 'Range'), ('enum', 'Enumeration'), ('unique', 'Unique'), ('required', 'Required'), ('credibility', 'Credibility (C)'), ('verification', 'Verification (V)'), ('efficiency', 'Efficiency (E)'), ('insightfulness', 'Insightfulness (I)'), ('traceability', 'Traceability (T)'), ('relevance', 'Relevance (R)'), ('auditability', 'Auditability (A)'), ('classification', 'Classification (C)')], max_length=20)),
                ('column_name', models.CharField(max_length=100)),
                ('parameters', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('dataset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rules', to='core.dataset')),
            ],
        ),
        migrations.CreateModel(
            name='RuleValidationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('validation_date', models.DateTimeField(auto_now_add=True)),
                ('passed', models.BooleanField()),
                ('failed_rows', models.JSONField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('execution_time', models.FloatField(blank=True, null=True)),
                ('dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.dataset')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.datagovernancerule')),
            ],
            options={
                'ordering': ['-validation_date'],
                'indexes': [models.Index(fields=['dataset', 'rule', 'validation_date'], name='core_ruleva_dataset_edbe59_idx'), models.Index(fields=['passed'], name='core_ruleva_passed_d71a8e_idx')],
            },
        ),
    ]
